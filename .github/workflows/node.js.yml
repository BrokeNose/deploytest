# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI
# 구독할 이벤트
on:
  push:
    branches: [ "main" ]

# jobs 단위로 개별 서버 ( 정확히는 Docker 컨테이너 단위라고 한다. ) 에서 작업이 수행된다.
# 각 작업은 별렬로 실행 도니다고 하는데, needs: build와 같이 표시해서 기다릴 수도 있다.

jobs:
  build:
    # Ubuntu, Windowx, MacOS를 지원한다.
    runs-on: ubuntu-latest
    # 변수 개념으로 생각
    #node-version 고하 같이 배열로 되어있으면, 해당 원소를 순회하면서 작업이 반복해서 실행된다.
    # matrix 때문인제 배열만 되는 것 같다.
    # 응용해서 runs-on에 여러 os에서 돌릴 수도 있다.
    strategy:
      matrix:
        node-version: [14] # 템플릿 기본값 [14.x, 16.x, 18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # uses 개념은 다른 사람이 작성한 내용을 실행하는 개념이다.
    # actions/checkout: Github의 마지막 커밋으로 Checkout 한다.
    # actions/setup-node: Node.js를 설치한다.
    # run 개념은 명령어를 실행한다. 쉘 스크립트와 동일하다.
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    # npm ci는  npm install과 같은 기능을 수정한다. 
    - run: npm install
    - run: npm ci
    # --if-present 옵션은 npm 스크립트가 존재할 때만 실행시키라는 의미이다.
    # 만약 build 스크립트가 없는 경우, 오류 없이 지나간다.
    - run: npm run build --if-present
    - run: npm run list
    - run: npm test
